/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package projetofinal;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Rectangle;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Aluno
 */
public class Relatorios extends javax.swing.JInternalFrame {

    /**
     * Creates new form Relatorios
     */
    public Relatorios() {
        initComponents();
        setClosable(true); // Botão fechar.
        setIconifiable(true); // Botão minimizar.
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dtcData1 = new com.toedter.calendar.JDateChooser();
        dtcData2 = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Período");

        jLabel2.setText("De:");

        jLabel3.setText("até");

        jButton1.setText("Gerar Relatório");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(dtcData1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addGap(8, 8, 8)
                        .addComponent(dtcData2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(51, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(123, 123, 123))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dtcData1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dtcData2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int i=0;
        Connection c;
        c = Conexao.conecta();
        Statement stmt;
        Object[] colunas = new Object[5];        
        Object[][] linhas;
        try {
            stmt = c.createStatement();
            //formatar as datas capturadas.
            Object data1 = dtcData1.getDate();
            SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
            String dt1 = formato.format(data1);
            Object data2 = dtcData2.getDate();
            SimpleDateFormat formato2 = new SimpleDateFormat("yyyy-MM-dd");
            String dt2 = formato2.format(data2);
            
            String consulta;
            consulta="SELECT date_format(dt_vencimento, \"%d/%m/%y\") as dd,"
                    + " nome_fant, valor, descricao FROM cad_contas "
                    + " WHERE dt_vencimento BETWEEN '"+dt1+"' AND '"+dt2+"';";
            
            System.out.println("AAA "+consulta);
            ResultSet rs;
            rs = stmt.executeQuery(consulta);
            rs.last();
            linhas = new Object[rs.getRow()][5];
            rs.beforeFirst();
            float vtotal = 0;
            while (rs.next()){
                linhas[i][0]=rs.getString("dd");
                linhas[i][1]=rs.getString("nome_fant");
                linhas[i][2]=rs.getString("valor");
                linhas[i][3]=rs.getString("valor");
                linhas[i][4]=rs.getString("descricao");
                i++;
                vtotal = vtotal +rs.getFloat("valor");
            }
            String labelvalor = Lancamentos.jLabel4.getText();
            Lancamentos.txtTotal.setText(String.valueOf(vtotal));
            Lancamentos.jTable1.setModel(new DefaultTableModel(linhas,colunas));
            
        Document doc = null;
        OutputStream os = null;	
        try {
            //cria o documento tamanho A4, margens de 2,54cm
            doc = new Document(PageSize.A4, 72, 72, 72, 72);	
            //cria a stream de saída
            long dd;
            dd = System.currentTimeMillis();
            os = new FileOutputStream(dd+".pdf");
			
            //associa a stream de saída ao 
            PdfWriter.getInstance(doc, os);
			
            //abre o documento
            doc.open();

            //adiciona o texto ao PDF
            //Paragraph p = new Paragraph("Meu primeiro arquivo PDF!");
            //doc.add(p);
            PdfPTable table = new PdfPTable(5);
            PdfPCell header = new PdfPCell(new Paragraph("Relatório de Dívidas para Pagar"));
            header.setColspan(5);
            
            header.setBackgroundColor(BaseColor.YELLOW);
            header.setBorderWidthBottom(2.0f);
            header.setBorderColorBottom(BaseColor.BLUE);
            header.setBorder(Rectangle.BOTTOM);
            
            
            table.addCell(header);	
//            table.addCell("abstract");
//            table.addCell("extends");
//            table.addCell("import");
//            table.addCell("while");
//            table.addCell("if");
//            table.addCell("switch");
            int ccc=0;
            int a=0;
            int ll=0;
            System.out.println("i="+i);
            for (int i2 = 0; i2 < (i*5); i2++) {
                //PdfPCell cc = new PdfPCell(new Paragraph(" "+i2));
                PdfPCell cc = new PdfPCell(new Paragraph(" "+linhas[ll][ccc]));
                System.out.println("ll A "+ll +" "+ccc);
                System.out.println("............"+linhas[ll][0]+" "+linhas[ll][1]+" "+linhas[ll][2]+" "+linhas[ll][3]+" "+linhas[ll][4]);
                if (a<5){
                    cc.setBackgroundColor(BaseColor.GREEN);
                    a++;
                }else{
                    cc.setBackgroundColor(BaseColor.WHITE);
                    a++;
                }
                if(a==10){
                    a=0;
                }
                table.addCell(cc);
                if((i2+1)%5==0)
                    ll++;
                ccc++;
                if(ccc==5)
                    ccc=0;
                
            }
           PdfPCell cc = new PdfPCell(new Paragraph(" "+labelvalor+" "+vtotal));
           
           cc.setColspan(5);
           cc.setBackgroundColor(BaseColor.YELLOW);
           cc.setHorizontalAlignment(PdfPCell.ALIGN_RIGHT);
           cc.setBorderWidthBottom(2.0f);
           cc.setBorderColorBottom(BaseColor.BLUE);
           cc.setBorder(Rectangle.BOTTOM);
           table.addCell(cc);
            
           doc.add(table);
            
        }
        catch (FileNotFoundException | DocumentException ee){
            System.out.println(" Erro ");

        } finally {
            if (doc != null) {
                //fechamento do documento
                doc.close();
            }
            if (os != null) {
                try {
                    //fechamento da stream de saída
                    os.close();
                } catch (IOException ex) {
                    Logger.getLogger(Lancamentos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
            
            
            
        } catch (SQLException ex) {
            System.out.println("Erro "+ex.getMessage());
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser dtcData1;
    private com.toedter.calendar.JDateChooser dtcData2;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
